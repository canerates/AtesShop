@model AtesShop.Web.Models.RegisterViewModel
@{
    ViewBag.Title = AtesShop.Resources.Resources.Register;
}

<!-- Breadcrumb Start -->
<div class="breadcrumb-area ptb-60 ptb-sm-30">
    <div class="container">
        <div class="breadcrumb">
            <ul>
                <li><a href="@Url.Action("Index", "Home")">@AtesShop.Resources.Resources.HomeT1O1</a></li>
                <li class="active"><a href="@Url.Action("Register", "Account")">@AtesShop.Resources.Resources.Register</a></li>
            </ul>
        </div>
    </div>
    <!-- Container End -->
</div>
<!-- Breadcrumb End -->
<!-- Register Account Start -->
<div class="register-account pb-60">
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="register-title">
                    <h3 class="mb-10">@AtesShop.Resources.Resources.RegisterAccount</h3>
                    <p class="mb-10">@AtesShop.Resources.Resources.HaveAccount</p>
                </div>
            </div>
        </div>
        <!-- Row End -->
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@id = "registerForm", @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-6">
                    <fieldset>
                        <legend>@AtesShop.Resources.Resources.YourPersonalDetails</legend>

                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @id = "fname", @placeholder = AtesShop.Resources.Resources.FirstName })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.LastName, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @id = "lname", @placeholder = AtesShop.Resources.Resources.LastName })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.UserName, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @id = "uname", @placeholder = AtesShop.Resources.Resources.Username })
                                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.Email, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "email", @placeholder = AtesShop.Resources.Resources.EnterYourEmail })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })
                            </div>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @id = "phone" })
                                <span id="phone-valid-msg" class="phone-hide">✓ @AtesShop.Resources.Resources.Valid</span>
                                <span id="phone-error-msg" class="phone-hide"></span>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-sm-6">

                    <fieldset>
                        <legend>@AtesShop.Resources.Resources.YourPassword <a id="pwdHint" tabindex="0" href="#" data-html="true" data-toggle="popover" data-trigger="focus" data-content="<ul><li>@AtesShop.Resources.Resources.PasswordSixCharactersLong</li><li>@AtesShop.Resources.Resources.PasswordNonLetterOrDigit</li><li>@AtesShop.Resources.Resources.PasswordAtLeastOneDigit</li><li>@AtesShop.Resources.Resources.PasswordAtLeastOneUppercase</li></ul>"><i class="fa fa-info-circle" aria-hidden="true"></i></a></legend>
                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.Password, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "pwd", @placeholder = AtesShop.Resources.Resources.Password })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="form-group pb-10">
                            <div class="col-sm-10">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label"}) <label class="control-label"><span class="require">*</span></label>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @id = "pwd-confirm", @placeholder = AtesShop.Resources.Resources.ConfirmPassword })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="business-input">
                        <legend>@AtesShop.Resources.Resources.YourBusiness</legend>
                        <div class="form-group pb-10">
                            <div class="custom-radio-group col-sm-10">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.BusinessType, "User", new { @checked = "checked" }) @AtesShop.Resources.Resources.User
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.BusinessType, "Installer") @AtesShop.Resources.Resources.Installer
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.BusinessType, "Distributor") @AtesShop.Resources.Resources.Distributor
                                </label>
                            </div>
                        </div>
                        <div id="companyInfo" style="display:none;">
                            <div class="form-group  pb-10">
                                <div class="col-sm-10">
                                    @Html.LabelFor(m => m.CompanyName, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                    @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", @id = "companyName", @placeholder = AtesShop.Resources.Resources.CompanyName })
                                    @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group  pb-10">
                                <div class="col-sm-10">
                                    @Html.LabelFor(m => m.TaxNumber, new { @class = "control-label" }) <label class="control-label"><span class="require">*</span></label>
                                    @Html.TextBoxFor(m => m.TaxNumber, new { @class = "form-control", @id = "companyNumber", @placeholder = AtesShop.Resources.Resources.TaxNumber })
                                    @Html.ValidationMessageFor(m => m.TaxNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                    </fieldset>
                    <fieldset class="newsletter-input">
                        <legend>@AtesShop.Resources.Resources.Newsletter</legend>
                        <div class="form-group  pb-10">
                            <label class="control-label">@AtesShop.Resources.Resources.Subscribe</label>
                            <div class="custom-radio-group col-sm-10">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.Subscription, true) @AtesShop.Resources.Resources.Yes
                                    @*<input type="radio" name="newsletter" value="1"> Yes*@
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.Subscription, false, new { @checked = "checked" }) @AtesShop.Resources.Resources.No
                                    @*<input type="radio" name="newsletter" value="0" checked="checked"> No*@
                                </label>
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div class="col-sm-12">
                    <div class="buttons newsletter-input">
                        <div class="pull-right">
                            <input id="registerSubmit" type="submit" name="submit" value="@AtesShop.Resources.Resources.Continue" class="newsletter-btn">
                        </div>
                    </div>
                </div>
            </div>
        }
        
        <!-- Row End -->
    </div>
    <!-- Container End -->
</div>
<!-- Register Account End -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="../../Client_Scripts/MvcFoolproofJQueryValidation.js" type="text/javascript"></script>
<script src="../../Client_Scripts/mvcfoolproof.unobtrusive.js" type="text/javascript"></script>
<script src="../../Content/js/phone/intlTelInput.js"></script>

<script>
    $('#pwdHint').click(function (event) {
        event.preventDefault();
    })


    var countryData = window.intlTelInputGlobals.getCountryData();
    var input = document.querySelector("#phone"),
        errorMsg = document.querySelector("#phone-error-msg"),
        validMsg = document.querySelector("#phone-valid-msg");

    var errorMap = ["@AtesShop.Resources.Resources.InvalidNumber", "@AtesShop.Resources.Resources.InvalidCountryCode", "@AtesShop.Resources.Resources.TooShort", "@AtesShop.Resources.Resources.TooLong", "@AtesShop.Resources.Resources.InvalidNumber"];

    for (var i = 0; i < countryData.length; i++) {
        var country = countryData[i];
        country.name = country.name.replace(/.+\((.+)\)/, "$1");
    }

    var reset = function () {
        input.classList.remove("phone-error");
        errorMsg.innerHTML = "";
        errorMsg.classList.add("phone-hide");
        validMsg.classList.add("phone-hide");
    };

    var iti = window.intlTelInput(input, {
        nationalMode: true,
        initialCountry: "TW",
        utilsScript: "../../Content/js/phone/utils.js?1590403638580"
    });

    input.addEventListener('blur', function () {
        reset();
        if (input.value.trim()) {
            if (iti.isValidNumber()) {
                validMsg.classList.remove("phone-hide");
            } else {
                input.classList.add("phone-error");
                var errorCode = iti.getValidationError();
                if (errorCode == -99) errorCode = 0;
                errorMsg.innerHTML = errorMap[errorCode];
                errorMsg.classList.remove("phone-hide");
            }
        }
    });

    input.addEventListener('change', reset);
    input.addEventListener('keyup', reset);

    //$('#registerForm').submit(function (e) {
    //    if (iti.isValidNumber() || iti.getNumber() == "") {
    //        document.registerForm.PhoneNumber.value = iti.getNumber();
    //    }
    //    else {
    //        e.preventDefault();
    //        $('#registerSubmit').blur();
    //    }
    //});

</script>