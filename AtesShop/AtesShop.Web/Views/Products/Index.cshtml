@model ProductViewModel
@using AtesShop.Web.Helpers

@{
    ViewBag.Title = "Index";

    var categoryId = Model.CategoryId == 0 ? "null" : Model.CategoryId.ToString();
    var searchKey = Model.SearchKey == null ? null : Model.SearchKey.ToString();

}

<!-- Breadcrumb Start -->
<div class="breadcrumb-area ptb-60 ptb-sm-30">
    <div class="container">
        <div class="breadcrumb">
            <ul>
                <li><a href="@Url.Action("Index", "Home")">@AtesShop.Resources.Resources.HomeT1O1</a></li>
                <li class="active"><a href="@Url.Action("Index", "Products")">@AtesShop.Resources.Resources.ProductsT1O2</a></li>
            </ul>
        </div>
    </div>
    <!-- Container End -->
</div>
<!-- Breadcrumb End -->
<!-- Shop Page Start -->
<div class="main-shop-page pb-60">
    <div class="container">
        <!-- Row End -->
        <div class="row">
            <!-- Sidebar Shopping Option Start -->
            <div class="col-lg-3  order-2">
                <div class="sidebar white-bg">
                    <div class="single-sidebar">
                        <div class="group-title">
                            <h2>categories</h2>
                        </div>
                        <ul>
                            <li><a href="@Url.Action("Index", "Products", new { categoryId = string.Empty })">All (@Model.ProductCount)</a></li>

                            @foreach (var category in Model.Categories)
                            {

                                <li><a href="@Url.Action("Index", "Products", new { categoryId = category.Id })">@category.Name (@category.Products.Count)</a></li>
                            }
                        </ul>
                    </div>
                    @if (Request.IsAuthenticated)
                    {
                        <div class="single-sidebar">
                            <div class="group-title">
                                <h2>price</h2>
                            </div>
                            <form action="javascript:getData()">
                                <div id="slider-range" class="ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content">
                                    <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                </div>
				<input id="minPrice" class="amount" type="number" min="0" oninput="validity.valid||(value='');">
                            	<input id="maxPrice" style="float: right;" class="amount" type="number" min="0" oninput="validity.valid||(value='');">
                            	<div style="display:inline-block; width:100%;">
                                	<button class="btn" id="price-range-submit">Apply</button>
                            	</div>
                            </form>
                        </div>
                    }
                    

                    <div id="compareSideBar" style="margin-top: 40px;">
                        @{
                            Html.RenderAction("CompareSideBar", "Generic");
                        }
                    </div>

                    <div id="wishSideBar" style="margin-top: 40px;">
                        @{
                            if (Request.IsAuthenticated)
                            {
                                Html.RenderAction("WishlistSideBar", "Generic");
                            }
                        }

                    </div>

                </div>
            </div>
            <!-- Sidebar Shopping Option End -->
            <!-- Product Categorie List Start -->
            <div class="col-lg-9 order-lg-2">
                <div class="grid-list-top border-default universal-padding fix mb-30">
                    <div class="grid-list-view f-left">
                        <ul class="list-inline nav">
                            <li><a class="active" data-toggle="tab" href="#" onclick="switchView(false)"><i class="fa fa-th"></i></a></li>
                            <li><a data-toggle="tab" href="#" onclick="switchView(true)"><i class="fa fa-list-ul"></i></a></li>
                            
                            @*<li><span id="item-list-description" class="grid-item-list"></span></li>*@
                        </ul>
                    </div>
                    <!-- Toolbar Short Area Start -->
                    <div class="main-toolbar-sorter f-right">
                        <div class="toolbar-sorter">
                            <label>sort by</label>
                            <select id="ddlSort" class="sorter" name="sorter">
                                <option id="1" value="Default" selected="selected">Select</option>
                                <option id="2" value="Name">Name</option>
                                <option id="3" value="Price">Price</option>
                            </select>
                            <span><a data-toggle="tab" href="#" onclick="switchSort();"><i id="sortTypeSymbol" class="fa fa-arrow-up"></i></a></span>
                        </div>
                    </div>
                    <!-- Toolbar Short Area End -->
                </div>
                <div id="tableContainer">
                    @{
                        Html.RenderAction("ProductList", new { minimumPrice = Model.MinimumPrice, maximumPrice = Model.MaximumPrice, isList = Model.IsListView });
                    }
                </div>
            </div>
            <!-- product Categorie List End -->
        </div>
        <!-- Row End -->
    </div>
    <!-- Container End -->
</div>
<!-- Shop Page End -->

<script>

    var isListView = @Json.Encode(Model.IsListView);
    var sortId = 1;
    var sortType = 1;
    var callTimeout;
    var minimumPrice = @Model.MinimumPrice;
    var maximumPrice = @Model.MaximumPrice;

    var priceSlider = $("#slider-range").slider({
        range: true,
        min: @Model.MinimumPrice,
        max: @Model.MaximumPrice,
        values: [@Model.MinimumPrice, @Model.MaximumPrice],
        slide: function (event, ui) {
            minimumPrice = ui.values[0];
            maximumPrice = ui.values[1];

            $("#minPrice").val(minimumPrice);
            $("#maxPrice").val(maximumPrice);

            //clearTimeout(callTimeout);
            //callTimeout = setTimeout(getData, 500);
        }
    });

    $("#minPrice").val( minimumPrice);
    $("#maxPrice").val( maximumPrice);

    $("#minPrice").on ('blur', function () {
        updateSliderVal("min");

    });

    $("#maxPrice").on ('blur', function () {
        updateSliderVal("max");
    });

    var updateSliderVal = function (key) {
        minimumPrice = parseInt($("#minPrice").val(), 10);
        maximumPrice = parseInt($("#maxPrice").val(), 10);
        var sliderMin = @Model.MinimumPrice;
        var sliderMax = @Model.MaximumPrice;

        switch (key) {
            case "min":
                if (minimumPrice < sliderMin) {
                    $("#minPrice").val(sliderMin);
                    priceSlider.slider('values', 0, sliderMin);
                }
                else if(minimumPrice > maximumPrice) {
                    $("#minPrice").val((maximumPrice - 1));
                    priceSlider.slider('values', 0, (maximumPrice - 1));
                }
                else {
                    priceSlider.slider('values', 0, minimumPrice);
                }
                break;
            case "max":
                if (maximumPrice > sliderMax) {
                    $("#maxPrice").val(sliderMax);
                    priceSlider.slider('values', 1, sliderMax);
                }
                else if(maximumPrice < minimumPrice) {
                    $("#maxPrice").val((minimumPrice + 1));
                    priceSlider.slider('values', 1, (minimumPrice + 1));
                }
                else {
                    priceSlider.slider('values', 1, maximumPrice);
                }
                break;
            default:
                break;
        }
    }

    var focusAction = function () {
        $('html, body').animate({
            scrollTop: $('#tableContainer').offset().top - 200
        }, 500);
    }

    var switchView = function (isList) {
        isListView = isList ? true : false;

        getData();
    }

    var switchSort = function () {
        $('#sortTypeSymbol').removeClass();
        if (sortType == 1) {
            sortType = 2;
            $('#sortTypeSymbol').addClass("fa fa-arrow-down");
        } else {
            sortType = 1;
            $('#sortTypeSymbol').addClass("fa fa-arrow-up");
        }
        getData();
    }

    var resetSort = function () {
        $('#sortTypeSymbol').removeClass();
        sortType = 1;
        $('#sortTypeSymbol').addClass("fa fa-arrow-up");
    }

    $("#ddlSort").change(function () {
        sortId = $("#ddlSort option:selected").attr("id");
        resetSort();
        getData();
    })

    var getData = function () {
        $.ajax({
            url: '@Url.Action("ProductList", "Products")',
            data: {
                search: "@Model.SearchKey",
                categoryId: @categoryId,
                minimumPrice: minimumPrice,
                maximumPrice: maximumPrice,
                isList: isListView,
                sortId: sortId,
                sortType: sortType
            },
            beforeSend: function (){
                ajaxLoading();
            }
        })
        .done(function (response) {
            //alert("Success");
            $("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, testStatus, errorThrown) {
            //alert("Fail");
        });
    }

    var ajaxLoading = function () {
        focusAction();
        $("#tableContainer").html("<div id='ajax-loading-overlay'><div class='ajax-loader'></div></div>");
    }

    var updateWishSideBar = function () {
        $.ajax({
            url: '@Url.Action("WishlistSideBar", "Generic")'

        })
        .done(function (response) {
            //alert("Success");
            $("#wishSideBar").html(response);

            $('.best-seller-pro-two')
            .owlCarousel({
                loop: false,
                nav: false,
                dots: false,
                smartSpeed: 1200,
                margin: 0,
                responsive: {
                    0: {
                        items: 1,
                        autoplay:true
                    },
                    768: {
                        items: 3
                    },
                    1000: {
                        items: 1
                    }
                }
            })
        })
        .fail(function (XMLHttpRequest, testStatus, errorThrown) {
            //alert("Fail");
        });
    }

    var updateCompareSideBar = function () {
        $.ajax({
            url: '@Url.Action("CompareSideBar", "Generic")'

        })
        .done(function (response) {
            //alert("Success");
            $("#compareSideBar").html(response);

            $('.best-seller-pro-two')
            .owlCarousel({
                loop: false,
                nav: false,
                dots: false,
                smartSpeed: 1200,
                margin: 0,
                responsive: {
                    0: {
                        items: 1,
                        autoplay: true
                    },
                    768: {
                        items: 3
                    },
                    1000: {
                        items: 1
                    }
                }
            })
        })
        .fail(function (XMLHttpRequest, testStatus, errorThrown) {
            //alert("Fail");
        });
    }

</script>