@model ProductListViewModel
@using AtesShop.Web.Helpers

@{
    var categoryParameter = Model.CategoryId == 0 ? string.Empty : Model.CategoryId.ToString();
    var current = ((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1;
    var size = (((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize));
    var total = Model.Pager.TotalItems;
    var categoryId = Model.CategoryId == 0 ? "null" : Model.CategoryId.ToString();

    var itemListDesc = "Showing " + current + " - " + size + " of " + total;

    var isList = Model.IsListView == true ? 1 : 0;

    var pageSort = Model.IsListView == true ? 4 : 6;

    this.ViewContext.HttpContext.Items["Stuff"] = itemListDesc;

    List<int> idList = new List<int>();
    var CompareProductsCookie = Request.Cookies["CompareProducts"];
    if (CompareProductsCookie != null && CompareProductsCookie.Value != "")
    {
        idList = CompareProductsCookie.Value.Split('-').Select(x => int.Parse(x)).ToList();
        idList.RemoveAt(0);
    }

}

<!-- Grid & List View End -->
<div class="main-categorie">
    <!-- Grid & List Main Area End -->
    <div class="tab-content fix">
        @if (!Model.IsListView)
        {
            <div id="grid-view" class="tab-pane active" style="padding:10px;">
                <div class="row" >
                    <!-- Single Product Start -->
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-lg-4 col-sm-6">
                            <div class="single-product">
                                <!-- Product Image Start -->
                                <div class="pro-img">
                                    <a href="@Url.Action("Detail", "Products", new { id = product.Id })">
                                        @{
                                            int counter = 1;
                                        }
                                        @foreach (var image in product.Images)
                                        {
                                            <img class="@(counter == 1 ? "primary-img" : "secondary-img")" src="@Url.Action("Image", "Products", new { id = image.Id })" alt="single-product">
                                            counter++;
                                        }
                                        @*<img class="primary-img" src="~/Content/img/products/ip1_dome.png" alt="single-product">
                                            <img class="secondary-img" src="~/Content/img/products/ip1_bullet.png" alt="single-product">*@
                                    </a>
                                </div>
                                <!-- Product Image End -->
                                <!-- Product Content Start -->
                                <div class="pro-content">
                                    <div class="product-rating">
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            if (i < product.Rate)
                                            {
                                                <i class="fa fa-star"></i>
                                            }
                                            else
                                            {
                                                <i style="color: #444" class="fa fa-star"></i>
                                            }
                                        }
                                    </div>
                                    <h4><a href="@Url.Action("Detail", "Products", new { id = product.Id })">@product.Name</a></h4>

                                    <div class="pro-description">
                                        <a href="@Url.Action("Detail", "Products", new { id = product.Id })"><p>@product.Description</p></a>
                                    </div>

                                    @if (Request.IsAuthenticated)
                                    {
                                        if (product.isDiscount)
                                        {
                                            <div class="mt-10">
                                                <p><span class="price">@product.Price</span><del class="prev-price">@product.PrePrice</del></p>
                                            </div>
                                            
                                        }
                                        else
                                        {
                                            <div class="mt-10">
                                                <p><span class="price">@product.Price</span></p>
                                            </div>
                                        }
                                    }
                                    
                                    
                                    <div class="pro-actions">
                                        <div class="actions-secondary">
                                            @if (!Request.IsAuthenticated)
                                            {
                                                <a class="add-cart" href="@Url.Action("Login", "Account")" data-toggle="tooltip">Check Price</a>
                                            }
                                            else
                                            {
                                                <a class="add-wishlist @if (product.isWished) {<text>selected</text> }" href="#" data-id="@product.Id" data-toggle="tooltip" title="Add to Wishlist"><i class="fa fa-heart"></i></a>
                                            }
                                            <a class="add-compare @if (idList.Contains(product.Id)){ <text>selected</text> }" href="#" data-id="@product.Id" data-cat-id="@product.CategoryId" data-toggle="tooltip" title="Add to Compare"><i class="fa fa-signal"></i></a>
                                        </div>
                                    </div>
                                    
                                </div>
                                <!-- Product Content End -->
                            </div>
                        </div>
                                            }
                    <!-- Single Product End -->


                </div>
            </div>
        }
        else
        {
            <div id="list-view" class="tab-pane active" style="padding:10px;">
                <!-- Single Product Start -->
        
                @foreach (var product in Model.Products)
                {
                    <div class="single-product">
                        <!-- Product Image Start -->
                        <div class="pro-img">
                            <a href="@Url.Action("Detail", "Products", new { id = product.Id })">
                                @{
                                    int counter = 1;
                                }
                                @foreach (var image in product.Images)
                                {
                                    <img class="@(counter == 1 ? "primary-img" : "secondary-img")" src="@Url.Action("Image", "Products", new { id = image.Id })" alt="single-product">
                                    counter++;
                                }
        
                            </a>
                        </div>
                        <!-- Product Image End -->
                        <!-- Product Content Start -->
                        <div class="pro-content">
                            <div class="product-rating">
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (i < product.Rate)
                                    {
                                        <i class="fa fa-star"></i>
                                    }
                                    else
                                    {
                                        <i style="color: #444" class="fa fa-star"></i>
                                    }
                                }
                            </div>
                            <h4><a href="@Url.Action("Detail", "Products", new { id = product.Id })">@product.Name</a></h4>
                            <a href="@Url.Action("Detail", "Products", new { id = product.Id })"><p>@product.Description</p></a>
                            @if (Request.IsAuthenticated)
                            {
                                if (product.isDiscount)
                                {
                                    <div class="mt-10">
                                        <p><span class="price">@product.Price</span><del class="prev-price">@product.PrePrice</del></p>
                                    </div>                                
                                }
                                else
                                {
                                    <div class="mt-10">
                                        <p><span class="price">@product.Price</span></p>
                                    </div>
                                }
                            }
                            
                            
                            <div class="pro-actions">
                                <div class="actions-secondary">
                                    @if (!Request.IsAuthenticated)
                                    {
                                        <a class="add-cart" href="@Url.Action("Login", "Account")" data-toggle="tooltip">Check Price</a>
                                    }
                                    else
                                    {
                                        <a class="add-wishlist @if (product.isWished) {<text>selected</text> }" href="#" data-id="@product.Id" data-toggle="tooltip" title="Add to Wishlist"><i class="fa fa-heart"></i></a>
                                    }
                                    <a class="add-compare @if (idList.Contains(product.Id)){ <text>selected</text> }" href="#" data-id="@product.Id" data-cat-id="@product.CategoryId" data-toggle="tooltip" title="Add to Compare"><i class="fa fa-signal"></i></a>
                                </div>
                            </div>
                            
                        </div>
                        <!-- Product Content End -->
                    </div>
        
                }
                <!-- Single Product End -->
            </div>
         }
        <!-- #grid view End -->
        <!-- #list view End -->
    </div>
    <!-- Grid & List Main Area End -->
</div>
<!--Breadcrumb and Page Show Start -->
<div class="pagination-box fix">
    <ul class="blog-pagination ">
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;
                
                <li class="@activeClass">
                    @Ajax.RawActionLink(page.ToString(),
                                      "ProductList",
                                      "Products",
                                      new
                                      {
                                          search = Model.SearchKey,
                                          isList = Json.Encode(Model.IsListView),
                                          categoryId = categoryParameter,
                                          pageNo = page,
                                          sortId = Model.SortId,
                                          sortType = Model.SortType,
                                          pageSize = Model.PageSize,
                                          maximumPrice = Model.MaximumPrice,
                                          minimumPrice = Model.MinimumPrice

                                      },
                                      new AjaxOptions
                                      {
                                          OnBegin = "ajaxLoading()",
                                          HttpMethod = "GET",
                                          UpdateTargetId = "tableContainer",
                                          InsertionMode = InsertionMode.Replace,
                                          OnComplete = "focusAction()"
                                      },
                                      "")
                </li>
            }
            if (Model.Pager.CurrentPage < Model.Pager.EndPage)
            {
                <li class="pagination_list">
                    @Ajax.RawActionLink("<i class='fa fa-angle-right'></i>",
                   "ProductList",
                   "Products",
                   new
                   {
                       search = Model.SearchKey,
                       isList = Json.Encode(Model.IsListView),
                       categoryId = categoryParameter,
                       pageNo = Model.Pager.CurrentPage + 1,
                       sortId = Model.SortId,
                       sortType = Model.SortType,
                       pageSize = Model.PageSize,
                       maximumPrice = Model.MaximumPrice,
                       minimumPrice = Model.MinimumPrice
                   },
                   new AjaxOptions
                   {
                       OnBegin = "ajaxLoading()",
                       HttpMethod = "GET",
                       UpdateTargetId = "tableContainer",
                       InsertionMode = InsertionMode.Replace,
                       OnComplete = "focusAction()"
                   },
                   "")
                </li>
            }
            else
            {
                <li style="display: inline-block; font-size:16px; color:#808080; border:1px solid #e7e7e7; width: 40px; text-align:center; height:40px; line-height: 40px; background: #fff;"><i class='fa fa-angle-right'></i></li>
            }

        }

    </ul>
    <div id="dataFromPartial">@itemListDesc</div>
    <div class="toolbar-sorter-footer">
        <label>show</label>
        <select id="sorterSelect" class="sorter" name="sorter">
            <option value="@pageSort">@pageSort</option>
            <option value="@(pageSort * 2)">@(pageSort * 2)</option>
            <option value="@(pageSort * 3)">@(pageSort * 3)</option>
        </select>
        <span>per page</span>
    </div>

</div>

<!--Breadcrumb and Page Show End -->

<script>

    var Start = function () {
        var idList;
        var currentCompareCookie = $.cookie('CompareProducts');
        if (currentCompareCookie != undefined && currentCompareCookie != "" && currentCompareCookie != null)
        {
            idList = currentCompareCookie.split('-');
            var compareBtns = $('.add-compare');
            for (var i = 1; i < idList.length; i++) {
                $('.add-compare[data-id = '+ idList[i] + ']').addClass('selected');
            }
        }
    }

    window.onload = Start;

    var isListView = @Json.Encode(Model.IsListView);

    $('#sorterSelect').val("@Model.PageSize");
    $('#sorterSelect').change(function () {
        var sortValue = this.value;

        $.ajax({
            url: '@Url.Action("ProductList", "Products")',
            data: {
                search: "@Model.SearchKey",
                categoryId: @categoryId,
                minimumPrice: @Model.MinimumPrice,
                maximumPrice: @Model.MaximumPrice,
                isList: isListView,
                sortId: @Model.SortType,
                sortType: @Model.SortType,
                pageSize: sortValue
            },
            beforeSend: function (){
                ajaxLoading();
            }
        })
        .done(function (response) {
            //alert("Success");
            $("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, testStatus, errorThrown) {
            alert("Fail");
        });

    });

    $('.add-wishlist').click(function (event) {
        event.preventDefault();
        var wishBtn = $(this);
        var productId = wishBtn.attr('data-id');

        $.ajax({
            url: '@Url.Action("AddToWishlist", "Generic")',
            data: {
                productId: productId
            }
        })
        .done(function (response) {
            wishBtn.addClass('selected');
            wishBtn.addClass('animated');
            heartAnimation();
            updateWishSideBar();

        })
        .fail(function (XMLHttpRequest, testStatus, errorThrown) {
            //alert("Fail");
        });
    });

    $('.add-compare').click(function (event) {
        event.preventDefault();
        var compareBtn = $(this);
        var productId = compareBtn.attr('data-id');
        var categoryId = compareBtn.attr('data-cat-id');

        var currentCompareCookie = $.cookie('CompareProducts');

        if (currentCompareCookie != undefined && currentCompareCookie != "" && currentCompareCookie != null)
        {
            products = currentCompareCookie.split('-');
        }
        else
        {
            products = [];
        }

        if (products.length >= 4) {

            swal({
                title: "Comparison limit (3).",
                text: "Do you want to compare products now ?",
                icon: "warning",
                buttons: {
                    confirm: {text: "Compare", className: 'sweet-warning button'},
                    cancel: "Cancel"
                }
            })
            .then((value) => {
                if (value) {
                    var url = "@Url.Action("Compare", "Generic")";
                    window.location.href = url;
                }
            });
        }

        else if (products.length > 0 && products[0] != categoryId) {
            swal({
                text: "Please choose the same category for comparison.",
                icon: "warning",
                buttons: {
                    confirm: {text: 'Ok', className: 'sweet-warning button'}
                }
            });
        }
        else {
            if (products.length == 0) {
                products.push(categoryId);
            }
            products.push(productId);
            $.cookie('CompareProducts', products.join('-'), { path: '/' });
            compareBtn.addClass('selected');
            compareBtn.addClass('animated');
            updateCompareSideBar();
        }
    });


</script>